{
  "version": 3,
  "sources": ["src/app/components/page/error404/error404.component.ts", "src/app/components/page/error404/error404.component.html", "src/app/shared/action/coupon.action.ts", "src/app/shared/services/coupon.service.ts", "src/app/shared/state/coupon.state.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport { Select } from '@ngxs/store';\nimport { Breadcrumb } from '../../../shared/interface/breadcrumb';\nimport { ThemeOptionState } from '../../../shared/state/theme-option.state';\nimport { Option } from '../../../shared/interface/theme-option.interface';\n\n@Component({\n  selector: 'app-error404',\n  templateUrl: './error404.component.html',\n  styleUrls: ['./error404.component.scss']\n})\nexport class Error404Component {\n\n  @Select(ThemeOptionState.themeOptions) themeOption$: Observable<Option>;\n\n  public breadcrumb: Breadcrumb = {\n    title: \"404\",\n    items: [{ label: \"404\", active: true }]\n  }\n\n  constructor(private location: Location) {}\n\n  back(){\n    this.location.back();\n  }\n\n}\n", "<app-breadcrumb [breadcrumb]=\"breadcrumb\"></app-breadcrumb>\n<section class=\"section-404 section-lg-space\">\n    <div class=\"container-fluid-lg\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <div class=\"image-404\">\n                    <img src=\"assets/images/inner-page/404.png\" class=\"img-fluid\" alt=\"error page\">\n                </div>\n            </div>\n            <div class=\"col-12\" *ngIf=\"(themeOption$ | async)?.error_page?.error_page_content\">\n                <div class=\"contain-404\">\n                    <h3 class=\"text-content\">\n                        {{ (themeOption$ | async)?.error_page?.error_page_content }}\n                    </h3>\n                    <app-button\n                      [class]=\"'btn btn-md text-white theme-bg-color mt-4 mx-auto'\"\n                      [id]=\"'back_button'\"\n                      [spinner]=\"false\"\n                      *ngIf=\"(themeOption$ | async)?.error_page?.back_button_enable\"\n                      (click)=\"back()\">\n                      {{ (themeOption$ | async)?.error_page?.back_button_text }}\n                    </app-button>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n", "import { Params } from \"../interface/core.interface\";\n\nexport class GetCoupons {\n  static readonly type = \"[Coupon] Get\";\n  constructor(public payload?: Params) {}\n}\n", "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CouponModel } from '../interface/coupon.interface';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CouponService {\n\n  public skeletonLoader: boolean = false;\n\n  constructor(private http: HttpClient) {}\n\n  getCoupons(payload?: Params): Observable<CouponModel> {\n    return this.http.get<CouponModel>(`${environment.URL}/coupon`, { params: payload });\n  }\n\n}\n", "import { Injectable } from \"@angular/core\";\nimport { Action, Selector, State, StateContext } from \"@ngxs/store\";\nimport { tap } from \"rxjs\";\nimport { GetCoupons} from \"../action/coupon.action\";\nimport { Coupon } from \"../interface/coupon.interface\";\nimport { CouponService } from \"../services/coupon.service\";\n\nexport class CouponStateModel {\n  coupon = {\n    data: [] as Coupon[],\n    total: 0\n  }\n}\n\n@State<CouponStateModel>({\n  name: \"coupon\",\n  defaults: {\n    coupon: {\n      data: [],\n      total: 0\n    },\n  },\n})\n@Injectable()\nexport class CouponState {\n\n  constructor(private couponService: CouponService) {}\n\n  @Selector()\n  static coupon(state: CouponStateModel) {\n    return state.coupon;\n  }\n\n  @Action(GetCoupons)\n  getCoupons(ctx: StateContext<CouponStateModel>, action: GetCoupons) {\n    this.couponService.skeletonLoader = true;\n    return this.couponService.getCoupons(action.payload).pipe(\n      tap({\n        next: result => {\n          ctx.patchState({\n            coupon: {\n              data: result.data,\n              total: result?.total ? result?.total : result.data?.length\n            }\n          });\n        },\n        complete: () => {\n          this.couponService.skeletonLoader = false;\n        },\n        error: err => {\n          throw new Error(err?.error?.message);\n        }\n      })\n    );\n  }\n\n}\n"],
  "mappings": "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",
  "names": []
}
